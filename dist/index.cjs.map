{"version":3,"file":"index.cjs","sources":["../src/core/utils/isRuleObject.js","../src/core/utils/resolveValue.js","../src/core/operators/eq.js","../src/core/operators/gte.js","../src/core/operators/gt.js","../src/core/operators/lt.js","../src/core/operators/lte.js","../src/core/operators/ne.js","../src/core/operators/and.js","../src/core/operators/in.js","../src/core/operators/or.js","../src/core/operators/index.js","../src/core/evaluateRule.js","../src/core/RuleEngine.js"],"sourcesContent":["function isRuleObject(obj) {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    Object.keys(obj).length === 1 &&\n    Object.keys(obj)[0].startsWith(\"$\")\n  );\n}\n\n// module.exports = { isRuleObject };\nexport {isRuleObject};\n","function resolveValue(value, context) {\n  if (typeof value === \"string\") {\n    const match = value.match(/^{{(.*?)}}$/);\n\n    if (match) {\n      const path = match[1].trim();\n      const parts = path.split(\".\");\n\n      let result = context;\n      for (const part of parts) {\n        if (result == null || !(part in result)) {\n          throw new Error(`Path \"${path}\" does not exist in context.`);\n        }\n        result = result[part];\n      }\n      return result;\n    }\n  }\n\n  return value;\n}\n\n// module.exports = {\n//   resolveValue,\n// };\n\nexport { resolveValue };\n","// const { isRuleObject } = require(\"../utils/isRuleObject\");\nimport { isRuleObject } from \"../utils/isRuleObject\";\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n// const { evaluateRule } = require(\"../evaluateRule\");\nimport { evaluateRule } from \"../evaluateRule\";\n\nfunction eqOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length < 2) {\n    throw new Error(\n      \"$eq operator expects an array with at least two elements.\"\n    );\n  }\n\n  const resolvedValues = params.map((value) => {\n    if (isRuleObject(value)) {\n      return evaluateRule(value, context);\n    }\n    return resolveValue(value, context);\n  });\n\n  // Check if all values are equal\n  const firstValue = resolvedValues[0];\n  return resolvedValues.every((v) => v === firstValue);\n}\n\nexport default eqOperator;\n","// const { isRuleObject } = require(\"../utils/isRuleObject\");\nimport { isRuleObject } from \"../utils/isRuleObject\";\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n// const { evaluateRule } = require(\"../evaluateRule\");\nimport { evaluateRule } from \"../evaluateRule\";\n\nfunction gteOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length !== 2) {\n    throw new Error('$gte operator expects an array with exactly two elements.');\n  }\n\n  let [left, right] = params;\n\n  if (isRuleObject(left)) {\n    left = evaluateRule(left, context);\n  } else {\n    left = resolveValue(left, context);\n  }\n\n  if (isRuleObject(right)) {\n    right = evaluateRule(right, context);\n  } else {\n    right = resolveValue(right, context);\n  }\n\n  return left >= right;\n}\n\nexport default gteOperator;\n","\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n\n\nfunction gtOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length !== 2) {\n    throw new Error('$gt operator expects an array with exactly two elements.');\n  }\n\n  const [left, right] = params.map(p => resolveValue(p, context));\n  return left > right;\n}\n\nexport default gtOperator;\n","\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n\n\nfunction ltOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length !== 2) {\n    throw new Error('$lt operator expects an array with exactly two elements.');\n  }\n\n  const [left, right] = params.map(p => resolveValue(p, context));\n  return left < right;\n}\n\nexport default ltOperator;\n","// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n\nfunction lteOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length !== 2) {\n    throw new Error('$lte operator expects an array with exactly two elements.');\n  }\n\n  const [left, right] = params.map(p => resolveValue(p, context));\n  return left <= right;\n}\n\nexport default lteOperator;\n","// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n\nfunction neOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length < 2) {\n    throw new Error('$ne operator expects an array with at least two elements.');\n  }\n\n  const resolvedValues = params.map(p => resolveValue(p, context));\n  const first = resolvedValues[0];\n  return !resolvedValues.every(v => v === first);\n}\n\nexport default neOperator;\n","// const { isRuleObject } = require(\"../utils/isRuleObject\");\nimport { isRuleObject } from \"../utils/isRuleObject\";\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n// const { evaluateRule } = require(\"../evaluateRule\");\nimport { evaluateRule } from \"../evaluateRule\";\n\nfunction andOperator(params, context = {}) {\n  if (!Array.isArray(params)) {\n    throw new Error('$and operator expects an array.');\n  }\n\n  for (let item of params) {\n    if (isRuleObject(item)) {\n      if (!evaluateRule(item, context)) {\n        return false;\n      }\n    } else {\n      if (!resolveValue(item, context)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport default andOperator;\n","// const { isRuleObject } = require(\"../utils/isRuleObject\");\nimport { isRuleObject } from \"../utils/isRuleObject\";\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n// const { evaluateRule } = require(\"../evaluateRule\");\nimport { evaluateRule } from \"../evaluateRule\";\n\nfunction inOperator(params, context = {}) {\n  if (!Array.isArray(params) || params.length !== 2) {\n    throw new Error(\"$in operator expects an array with exactly two elements.\");\n  }\n\n  let [value, array] = params;\n\n  if (isRuleObject(value)) {\n    value = evaluateRule(value, context);\n  } else {\n    value = resolveValue(value, context);\n  }\n\n  if (isRuleObject(array)) {\n    array = evaluateRule(array, context);\n  } else {\n    array = resolveValue(array, context);\n  }\n\n  if (!Array.isArray(array)) {\n    throw new Error(\"$in operator expects second argument to be an array.\");\n  }\n\n  return array.includes(value);\n}\n\nexport default inOperator;\n","// const { isRuleObject } = require(\"../utils/isRuleObject\");\nimport { isRuleObject } from \"../utils/isRuleObject\";\n// const { resolveValue } = require(\"../utils/resolveValue\");\nimport { resolveValue } from \"../utils/resolveValue\";\n// const { evaluateRule } = require(\"../evaluateRule\");\nimport { evaluateRule } from \"../evaluateRule\";\n\nfunction orOperator(params, context = {}) {\n  if (!Array.isArray(params)) {\n    throw new Error(\"$or operator expects an array.\");\n  }\n\n  for (let param of params) {\n    if (isRuleObject(param)) {\n      if (evaluateRule(param, context)) {\n        return true;\n      }\n    } else if (resolveValue(param, context)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default orOperator;\n","import eqOperator from \"./eq\";\nimport gteOperator from \"./gte\";\nimport gtOperator from \"./gt\";\nimport ltOperator from \"./lt\";\nimport lteOperator from \"./lte\";\nimport neOperator from \"./ne\";\nimport andOperator from \"./and\";\nimport inOperator from \"./in\";\nimport orOperator from \"./or\";\n\n// module.exports = {\n//   $eq: require(\"./eq\"),\n//   $gte: require(\"./gte\"),\n//   $gt: require(\"./gt\"),\n//   $lt: require(\"./lt\"),\n//   $lte: require(\"./lte\"),\n//   $ne: require(\"./ne\"),\n//   $and: require(\"./and\"),\n//   $in: require(\"./in\"),\n//   $or: require(\"./or\"),\n// };\n\nexport default {\n  $eq: eqOperator,\n  $gte: gteOperator,\n  $gt: gtOperator,\n  $lt: ltOperator,\n  $lte: lteOperator,\n  $ne: neOperator,\n  $and: andOperator,\n  $in: inOperator,\n  $or: orOperator,\n};\n","// const operators = require(\"./operators\");\nimport operators from \"./operators\";\n// const { isRuleObject } = require(\"./utils/isRuleObject\");\nimport { isRuleObject } from \"./utils/isRuleObject\";\n\nfunction evaluateRule(rule, context) {\n  if (!isRuleObject(rule)) {\n    return rule;\n  }\n\n  const [operatorName, params] = Object.entries(rule)[0];\n  const operatorFn = operators[operatorName];\n\n  if (!operatorFn) {\n    throw new Error(`Unsupported operator: ${operatorName}`);\n  }\n\n  let resolvedParams = params;\n  if (Array.isArray(params)) {\n    resolvedParams = params.map((p) => evaluateRule(p, context));\n  } else if (isRuleObject(params)) {\n    resolvedParams = evaluateRule(params, context);\n  }\n  return operatorFn(resolvedParams, context);\n}\n\n// module.exports = { evaluateRule };\n\nexport { evaluateRule };\n","// const { evaluateRule } = require(\"./evaluateRule\");\n\nimport { evaluateRule } from \"./evaluateRule.js\";\n\n/**\n * Evaluates one or multiple rules against an optional context.\n *\n * @function evaluateRules\n * @param {Object|Object[]} rules - A single rule object or an array of rule objects.\n * Each rule should contain an operator (like $eq, $gt, etc.) and parameters.\n *\n * @param {Object} [context={}] - Optional context data object.\n * If rule parameters contain dynamic placeholders (e.g., \"{{user.age}}\"),\n * they will be resolved using the context.\n *\n * @returns {boolean} Returns `true` if one rule pass, or `false` all of the rules do not pass.\n *\n * @throws {Error} Throws an error if:\n *  - An unsupported operator is encountered.\n *  - A context path does not exist.\n *  - The rule format is invalid.\n *\n * @example\n * const rules = [\n *   { $gte: [\"{{user.age}}\", 18] },\n *   { $eq: [\"{{user.role}}\", \"admin\"] }\n * ];\n *\n * const context = {\n *   user: { age: 25, role: \"admin\" }\n * };\n *\n * const result = evaluateRules(rules, context);\n * console.log(result); // Output: true\n */\nfunction evaluateRules(rules, context = {}) {\n  if (!Array.isArray(rules)) {\n    rules = [rules];\n  }\n  for (const rule of rules) {\n    const result = evaluateRule(rule, context);\n    if (result) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// module.exports = { evaluateRules };\n\nexport { evaluateRules };\n"],"names":[],"mappings":"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"}